{"version":3,"sources":["table_editor/file_loader.cljs"],"mappings":";AAIA,AAAA,AAAMA,AAAaC;AAAnB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEoC,AAAKC;AAAL,AACE,AAAMC,AAAK,AAACC,AAAM,AAACC,AAAU,AAAA,AAAIH;AAC3BI,AAAY,AAAAC;AADlB,AAEE,AAAM,AAAUD,AACV,AAAKJ;AAAL,AACE,AAAMM,AAAI,AAAA,AAAA,AAAA,AAAIN,AAAoBO,AAAUC;AAA5C,AACE,AAACC,AAAQH;;AACT,AAAA,AAAA,AAAAI,AAACC,AAAMZ,AAAMa;AAAb,AAA2B,AAAAF,AAAC,AAACG,AAAWP;;;;AAClD,AAAaF,AAAYH;AAVjE,AAAA,AAAA","names":["table-editor.file-loader/file-loader","state","e","file","cljs.core/first","cljs.core.array_seq","file-reader","js/FileReader","res","goog.labs.format.csv/parse","cljs.core.js__GT_clj","cljs.core.println","p1__39462#","cljs.core.swap_BANG_","cljs.core/update","cljs.core/constantly"],"sourcesContent":["(ns table-editor.file-loader\n  (:require\n   [goog.labs.format.csv :as csv]))\n\n(defn file-loader [state]\n  [:div\n   [:input {:type \"file\" :on-change (fn [e]\n                                      (let [file (first (array-seq (.. e -target -files)))\n                                            file-reader (js/FileReader.)]\n                                        (set! (.-onload file-reader)\n                                              (fn [e]\n                                                (let [res (-> e .-target .-result csv/parse js->clj)]\n                                                  (println res)\n                                                  (swap! state update :data #((constantly res) %)))))\n                                        (.readAsText file-reader file)))}]\n   [:div \"asdf\"]])\n\n"]}