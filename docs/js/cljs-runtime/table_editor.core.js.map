{"version":3,"sources":["table_editor/core.cljs"],"mappings":";AAUA,AAAA,AAAMA;AAAN,AACE,AAAMC,AAAU,AAAA,AAAA,AAAAC,AAAaC;AACvBC,AAAQ,AAAA,AAAA,AAAAF,AAAQC;AAChBE,AAAc,AAAA,AAAA,AAAAH,AAAWC;AAF/B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAKIG,AACD,AAAA,AAAA,AAAA,AAAA,AAAMD,AAA4CA,AAClD,AAAM,AAAAE,AAAKH;AAAL,AAAA,AAAAG;AAAaN;;AAAbM;;AAAN,AAAA,AAAA,AAAA,AAA8D,AAAA,AAAA,AAACC,AAAeP,AAC9E,AAAA,AAAA,AAAA,AAAMG,AAASK;;AAKpB,AAAA,AAAMC;AAAN,AACE,AAAA,AAACC,AAAUX,AAAW,AAAA,AAAiBY;;AAEzC,AAAA,AAAeC;AAAf,AACE,AAACH","names":["table-editor.core/home-page","file-name","cljs.core/deref","table-editor.state/state","content","error-message","table-editor.file-loader/file-loader","and__4115__auto__","cljs.core.concat","table-editor.table/table","table-editor.core/mount-root","reagent.dom.render","js/document","table-editor.core/init!"],"sourcesContent":["(ns table-editor.core\n  (:require\n   [reagent.dom :as d]\n   [table-editor.table :refer [table]]\n   [table-editor.file-loader :refer [file-loader]]\n   [table-editor.state :refer [state]]))\n\n;; -------------------------\n;; Views\n\n(defn home-page []\n  (let [file-name (:file-name @state)\n        content (:data @state)\n        error-message (:err-msg @state)]\n    [:div\n     [:h2 \"Table editor\"]\n     [file-loader]\n     (when error-message [:div.status-msg.status-error error-message])\n     (when (and content file-name) [:div.status-msg.status-success (concat \"File \" file-name \" is successfully loaded\")])\n     (when content [table])]))\n\n;; -------------------------\n;; Initialize app\n\n(defn mount-root []\n  (d/render [home-page] (.getElementById js/document \"app\")))\n\n(defn ^:export init! []\n  (mount-root))\n"]}